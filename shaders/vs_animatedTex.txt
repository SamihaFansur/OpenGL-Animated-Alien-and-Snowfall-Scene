#version 330 core

// Position, Normal, and Texture coordinates
layout (location = 0) in vec3 position;
layout (location = 1) in vec3 normal;
layout (location = 2) in vec2 texCoord;

// Outputs to Fragment Shader
out vec3 aPos;
out vec3 aNormal;
out vec2 aTexCoord;
out vec3 ourColor;
out vec2 staticTexCoord;
out vec2 scrollingTexCoord;

uniform mat4 model;
uniform mat4 mvpMatrix;
uniform vec2 offset;      // added to control the texture movement

void main() {
    gl_Position = mvpMatrix * vec4(position, 1.0);

    aPos = vec3(model * vec4(position, 1.0f));
    mat4 normalMatrix = transpose(inverse(model));
    vec3 normalize = normalize(normal);
    aNormal = mat3(normalMatrix) * normalize;
    aTexCoord = texCoord;

    // Outputs for texture movement
    ourColor = normal;
    staticTexCoord = texCoord;
    scrollingTexCoord = texCoord + offset;
}
